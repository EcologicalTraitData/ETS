[
  {
    "op": "core/column-addition",
    "description": "Create column isDefinedBy at index 4 based on column Identifier using expression grel:value.substring(0,value.lastIndexOf(\"/\")+1)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "invert": false,
          "caseSensitive": true,
          "query": "",
          "name": "Identifier",
          "type": "text",
          "columnName": "Identifier"
        }
      ]
    },
    "newColumnName": "isDefinedBy",
    "columnInsertIndex": 4,
    "baseColumnName": "Identifier",
    "expression": "grel:value.substring(0,value.lastIndexOf(\"/\")+1)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Class at index 1 based on column Namespace using expression grel:\"http://terminologies.gfbio.org/terms/ETS/\"+value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Class",
    "columnInsertIndex": 1,
    "baseColumnName": "Namespace",
    "expression": "grel:\"http://terminologies.gfbio.org/terms/ETS/\"+value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Comment using expression grel:value.replace(\"&\",\"&amp;\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "",
          "name": "Definition",
          "type": "text",
          "columnName": "Definition"
        }
      ]
    },
    "columnName": "Comment",
    "expression": "grel:value.replace(\"&\",\"&amp;\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Definition using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "",
          "name": "Definition",
          "type": "text",
          "columnName": "Definition"
        }
      ]
    },
    "columnName": "Definition",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Comment using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "",
          "name": "Definition",
          "type": "text",
          "columnName": "Definition"
        }
      ]
    },
    "columnName": "Comment",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Comment using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "",
          "name": "Definition",
          "type": "text",
          "columnName": "Definition"
        }
      ]
    },
    "columnName": "Comment",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Definition using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "",
          "name": "Definition",
          "type": "text",
          "columnName": "Definition"
        }
      ]
    },
    "columnName": "Definition",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Refines using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "",
          "name": "Definition",
          "type": "text",
          "columnName": "Definition"
        }
      ]
    },
    "columnName": "Refines",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]